<?php
/**
 * Created by PhpStorm.
 * User: bkovach
 * Date: 8/27/16
 * Time: 9:52 PM
 */

namespace App\Controller;


use Cake\Log\Log;
use Cake\Network\Exception\BadRequestException;
use Cake\Network\Exception\NotFoundException;
use Cake\View\View;

class ConditionsController extends AppController  {

	public function isAuthorized( $user ) {
		if(
			'committee' == $user['role'] &&
			in_array( $this->request->param('action'), ['index', 'view', 'quickAdd'])
		) {
			return true;
		}

		return parent::isAuthorized( $user ); // TODO: Change the autogenerated stub
	}

	public function index() {
		$conditions = $this->Conditions->find('all');

		$this->set( compact('conditions') );
	}

	public function add() {
		if( $this->request->is(['post'])) {
			$condition = $this->Conditions->newEntity($this->request->getData());

			if( $this->Conditions->save($condition) ){
				return $this->Flash->success(__("Your condition was saved successfully") );
			}
		}
	}

	public function edit($condition_id = null) {
		if( !$condition_id ) {
			throw new NotFoundException( __('Unable to edit the requested condition.') );
		}

		$condition = $this->Conditions->get($condition_id);

		if( $this->request->is(['post', 'patch', 'put']) ) {
			$condition = $this->Conditions->patchEntity($condition, $this->request->getData());

			if( $this->Conditions->save( $condition ) ) {
				$this->Flash->success( __("The condition, {0}, was sucessfully saved.", [$condition->title]) );
				return $this->redirect(['action' => 'view', $condition->condition_id]);
			} else {
				$this->Flash->error( __("There was a problem saving your condition.  Please correct any errors and try again") );
			}
		}

		$this->set( compact('condition') );
	}

	public function view($condition_id = null) {
		$condition = $this->Conditions->get($condition_id, ['contain' => ['Jobs']]);

		$this->set(compact('condition') );
	}

	public function delete($condition_id = null) {

		if( !$condition_id ) {
			throw new BadRequestException( __('This was an invalid request') );
		}

		if( $this->request->is(['post', 'delete'])) {
			$condition = $this->Conditions->get($condition_id);
			if($this->Conditions->delete($condition) ) {
				$this->Flash->success( __('This condition was successfully deleted') );
			} else {
				$this->Flash->error( __('There was a problem deleting the condition') );
			}

		} else {
			throw new BadRequestException( __("Invalid HTTP Verb used to delete condition") );
		}
		return $this->redirect(['action' => 'index']);
	}

	public function quickAdd() {
		$condition = null;
		$template = null;

		if( $this->request->is(['put', 'post'])) {
			$condition = $this->Conditions->newEntity($this->request->getData());
			$condition = $this->Conditions->save($condition);
			$template = __('<div class="checkbox"><label for="conditions-ids-{0}"><input name="conditions[_ids][]" value="{0}" id="conditions-ids-{0}" type="checkbox">{1}</label></div>',
				[
						$condition->condition_id,
						$condition->title
				]);
		}

		$this->set('condition', $condition);
		$this->set('template', $template);
		$this->set('_serialize', ['condition', 'template']);
	}

}